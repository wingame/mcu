; 2013-4-24
; 4114 OLED DISPLAY V1.2
; 

; 掉电检测为2.7V
; 内部8M晶振

.INCLUDE "M8DEF.INC"

.def	temp1					= r1
.def	temp2					= r2
.def	tcnt0h					= r3
.def	tcnt0x					= r4
.def	r_sreg					= r5

.EQU	START_SENT				=		0x08
.EQU	REPEAT_START_SENT		=		0x10
.EQU	SLAW_ACK				=		0x18
.EQU	SLAW_NOT_ACK			=		0x20
.EQU	DATA_ACK				=		0x28
.EQU	DATA_NOT_ACK			=		0x30
.EQU	ARBITRATION_FAILURE		=		0x38

.EQU	SLAR_ACK				=		0x40
.EQU	SLAR_NOT_ACK			=		0x48

; for oled
; 0b01111011
;         |+---------> read/write control
;         +----------> chip select /DC act as SA0
.EQU	TWI_ADDR_OLED_W			=		0x7a	;0b01111010
;.EQU	TWI_ADDR_OLED_R			=		0x79
;.EQU	TWI_ADDR_4113_W			=		0x20
;.EQU	TWI_ADDR_4113_R			=		0x21

.equ	TWI_ADDR_4114_W			=		0b00100000
.equ	TWI_ADDR_4114_R			=		0b00100001

.dseg				; DATA segment

mem_last_fs:	.byte	1
mem_image_data:		.byte	16

.cseg
.org 0
; M8 Interrupt Lists
	Rjmp	Reset
	nop					;.equ	INT0addr=$001	; External Interrupt0 Vector Address
	nop					;.equ	INT1addr=$002	; External Interrupt1 Vector Address
	nop					;.equ	OC2addr	=$003	; Output Compare2 Interrupt	Vector Address
	Rjmp	OVF2_INT					;.equ	OVF2addr=$004	; Overflow2	Interrupt Vector Address
	Rjmp	ICP1_INT					;.equ	ICP1addr=$005	; Input	Capture1 Interrupt Vector Address
	Rjmp	OCR1A_INT					;.equ	OC1Aaddr=$006	; Output Compare1A Interrupt Vector	Address
	Rjmp	OCR1B_INT					;.equ	OC1Baddr=$007	; Output Compare1B Interrupt Vector	Address
	Rjmp	OVF1_INT					;.equ	OVF1addr=$008	; Overflow1	Interrupt Vector Address
	Rjmp	ovf0_int					;.equ	OVF0addr=$009	; Overflow0	Interrupt Vector Address
	Rjmp	SPI_INT						;.equ	SPIaddr	=$00a	; SPI Interrupt	Vector Address
	Rjmp	URRX_INT					;.equ	URXCaddr=$00b	; USART	Receive	Complete Interrupt Vector Address
	Rjmp	UDRE_INT					;.equ	UDREaddr=$00c	; USART	Data Register Empty	Interrupt Vector Address
	Rjmp	UTXC_INT					;.equ	UTXCaddr=$00d	; USART	Transmit Complete Interrupt	Vector Address
	Rjmp	ADC_INT						;.equ	ADCCaddr=$00e	; ADC Interrupt	Vector Address
	Rjmp	ERDY_INT					;.equ	ERDYaddr=$00f	; EEPROM Interrupt Vector Address
	Rjmp	ACI_INT						;.equ	ACIaddr	=$010	; Analog Comparator	Interrupt Vector Address
	Rjmp	TWI_INT						;.equ	TWIaddr =$011	; Irq.	vector address for Two-Wire	Interface
	Rjmp	SPM_INT						;.equ	SPMaddr	=$012	; SPM complete Interrupt Vector	Address
	Rjmp	SPMR_INT					;.equ	SPMRaddr =$012	; SPM complete Interrupt Vector	Address

INT0_INT:
INT1_INT:
OCR2_INT:
OVF2_INT:
ICP1_INT:
OCR1A_INT:
OCR1B_INT:
OVF1_INT:

SPI_INT:
URRX_INT:
UDRE_INT:
UTXC_INT:
ADC_INT:
ERDY_INT:
ACI_INT:
TWI_INT:
SPM_INT:
SPMR_INT:
	reti
Reset:
	cli
	eor		r0, r0
	out		SREG, r0	; 63
	Ldi		r19, high(RAMEND)	; stack = RAMEND ,初始化SP
	Ldi		r18, low(RAMEND)
	out		SPH, r19
	out 	SPL, r18
	clt

	


	ldi		r16,255
dloop_1:
	dec		r16
	brne	dloop_1
	


	rcall	twi_init
	rcall	ssd1306_init
	rcall	show_image
	rcall	delay_1sec
	rcall	delay_1sec
	rcall	oled_clear
	; turn off OLED
	ldi		r19,0xae
	rcall	oled_1cmd

	ldi		r18,2
	ldi		r19,16
	ldi		r28,low(logo*2)
	ldi		r29,high(logo*2)
	rcall	oled_str
	ldi		r28,low(no_signal*2)
	ldi		r29,high(no_signal*2)
	ldi		r18,4
	ldi		r19,16
	rcall	oled_str
	; turn on OLED
	ldi		r19,0xaf
	rcall	oled_1cmd

	ldi		r18,1
	ldi		r19,0b01010100
	rcall	akm_write
	
	ldi		r18,2
	ldi		r19,0
	rcall	akm_write
select_channel:
	ldi		r16,0x80
	sts		mem_last_fs,r16
	; check optical signal
	ldi		r18,3
	ldi		r19,0x48+4		; rx4 = optical
	rcall	akm_write
	rcall	ak_channel_change_delay
	ldi		r18,6
	rcall	akm_read
	sbrs	r19,4
	rjmp	play_optical
	; check coax
	ldi		r18,3
	ldi		r19,0x48+3		; rx3 = coax
	rcall	akm_write
	rcall	ak_channel_change_delay
	ldi		r18,6
	rcall	akm_read
	sbrs	r19,4
	rjmp	play_coax
	; check usb
	ldi		r18,3
	ldi		r19,0x48+2		; rx2 = usb
	rcall	akm_write
	rcall	ak_channel_change_delay
	ldi		r18,6
	rcall	akm_read
	sbrs	r19,4
	rjmp	play_usb
	rjmp	select_channel
play_optical:
	ldi		r28,low(str_optical*2)
	ldi		r29,high(str_optical*2)
	ldi		r18,4
	ldi		r19,16
	rcall	oled_str
	rcall	show_fs
play_1:
	ldi		r18,6
	rcall	akm_read
	sbrc	r19,4
	rjmp	exit_play
; debug start =====================================================
	cbr		r19,1<<4
	and		r19,r19
	breq	play_1
	mov		r17,r19

; r18 page 0~7
; r19 column
; r17 value of hex
;oled_hex:

	
; debug end   =====================================================
	
	
	;rcall	show_info
	rjmp	play_1
play_coax:
	ldi		r28,low(str_coax*2)
	ldi		r29,high(str_coax*2)
	ldi		r18,4
	ldi		r19,16
	rcall	oled_str
	rcall	show_fs
	rjmp	play_1
play_usb:
	ldi		r28,low(str_usb*2)
	ldi		r29,high(str_usb*2)
	ldi		r18,4
	ldi		r19,16
	rcall	oled_str
	rcall	show_fs
	rjmp	play_1
exit_play:
	ldi		r19,4
	rcall	oled_page_clear
	ldi		r19,5
	rcall	oled_page_clear
	ldi		r28,low(no_signal*2)
	ldi		r29,high(no_signal*2)
	ldi		r18,4
	ldi		r19,16
	rcall	oled_str
	rjmp	select_channel
	
show_fs:
	ldi		r18,7
	rcall	akm_read
	swap	r19
	andi	r19,0x0f
	;rjmp	skip_detect
	
	lds		r18,mem_last_fs
	sts		mem_last_fs,r19
	cpse	r18,r19
	rjmp	show_fs_x
	rjmp	show_fs_exit
show_fs_x:
	push	r19
	; 检测采样
	cpi		r19,8
	brcs	show_fs1
	; >= 8
	cpi		r19,12
	brcs	show_fs2
	; >= 12
	ldi		r18,0
	ldi		r19,0b00001111
	rcall	akm_write
	rjmp	show_fs3
;	cpi		r19,0b00001110
;	rjmp	show_fs2

; clk & power down control
; 7    6   5   4   3     2     1   0
; CS12 BCU CM1 CM0 OCKS1 OCKS0 PWN RSTN

show_fs2:
	; < 12
	ldi		r18,0
	ldi		r19,0b00000011
	rcall	akm_write
	rjmp	show_fs3
show_fs1:
	ldi		r18,0
	ldi		r19,0b00001011
	rcall	akm_write
;	rjmp	show_fs3
show_fs3:
	pop		r19
	rcall	ak_channel_change_delay
skip_detect:
	lsl		r19
	ldi		r30,low(fs_index*2)
	ldi		r31,high(fs_index*2)
	add		r30,r19
	adc		r31,r0
	lpm		r28,Z+
	lpm		r29,Z
	ldi		r18,4
	ldi		r19,50
	rcall	oled_str
show_fs_exit:
	ret
; OLED lm096 functions ==================================================================
ssd1306_init:
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	;D/C# low for command access
	ldi		r18,0
	rcall	twi_send
	;re-map segment
	ldi		r18,0b10100001
	rcall	twi_send
	;re-map pages
	ldi		r18,0xc8
	rcall	twi_send
	
	; turn off led
	ldi		r18,0xae
	rcall	twi_send
	; set page addressing mode
	ldi		r18,0x20
	rcall	twi_send
	ldi		r18,0x02
	rcall	twi_send
	; turn on led
	ldi		r18,0xaf
	rcall	twi_send

;	ldi		r18,0xa5
;	rcall	twi_send
	rcall	twi_stop
;	rcall	delay_1sec

;	rcall	oled_clear
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0
	rcall	twi_send
	ldi		r18,0xa4
	rcall	twi_send
	rcall	twi_stop
	ret
; 单字节命令
; r19
oled_1cmd:
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0
	rcall	twi_send
	; turn off led
	mov		r18,r19
	rcall	twi_send
	rcall	twi_stop
	ret
;r19 0~7
oled_page:
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0
	rcall	twi_send
	ldi		r18,0xb0
	add		r18,r19
	rcall	twi_send
	rcall	twi_stop
	ret
;r19 0~127
oled_column:
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0
	rcall	twi_send
	inc		r19
	inc		r19
	mov		r18,r19
	andi	r18,0x0f
	rcall	twi_send
	mov		r18,r19
	swap	r18
	andi	r18,0x0f
	ori		r18,0b00010000
	rcall	twi_send
	rcall	twi_stop
	ret
; r19 page
oled_page_clear:
	rcall	oled_page
	ldi		r19,0
	rcall	oled_column
	ldi		r17,128
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	; D/C# high for data access
	ldi		r18,0x40
	rcall	twi_send
	ldi		r18,0
page_clear_1:
	rcall	twi_send
	dec		r17
	brne	page_clear_1
	
	rcall	twi_stop
	ret
oled_clear:
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0
	rcall	twi_send
	ldi		r18,0xae
	rcall	twi_send
	rcall	twi_stop

	ldi		r19,0
clear_2:
	push	r19
	rcall	oled_page
	ldi		r19,0
	rcall	oled_column
	ldi		r17,128
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0x40
	rcall	twi_send
	ldi		r18,0
clear_1:
	rcall	twi_send
	dec		r17
	brne	clear_1
	rcall	twi_stop
	pop		r19
	inc		r19
	cpi		r19,8
	brne	clear_2

	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0
	rcall	twi_send
	ldi		r18,0xaf
	rcall	twi_send
	rcall	twi_stop
	ret
; r18 page 0~7
; r19 column
; r17 char
oled_char:
	push	r18
	push	r19
	
	subi	r17,32
	eor		r16,r16
	lsl		r17
	rol		r16
	lsl		r17
	rol		r16
	lsl		r17
	rol		r16
	lsl		r17
	rol		r16
	ldi		r30,low(ascii_matrix*2)
	ldi		r31,high(ascii_matrix*2)
	add		r30,r17
	adc		r31,r16

	movw	r10,r18
	rcall	oled_column
	mov		r19,r10
	rcall	oled_page
	
	ldi		r20,8
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	; D/C# high for data access
	ldi		r18,0x40
	rcall	twi_send
char_1:
	lpm		r18,Z+
	rcall	twi_send
	dec		r20
	brne	char_1
	rcall	twi_stop

	mov		r19,r11
	rcall	oled_column
	mov		r19,r10
	inc		r19
	rcall	oled_page
	
	ldi		r20,8
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	; D/C# high for data access
	ldi		r18,0x40
	rcall	twi_send
char_2:
	lpm		r18,Z+
	rcall	twi_send
	dec		r20
	brne	char_2
	rcall	twi_stop
	
	pop		r19
	pop		r18
	ret
; r18 page 0~7
; r19 column
; r28:r29 string address
oled_str:
	push	r18
	push	r19
	movw	r8,r18
str_1:
	movw	r18,r8
	movw	r30,r28
	lpm		r17,Z
	and		r17,r17
	breq	str_finish
	rcall	oled_char
	ldi		r16,8
	add		r9,r16
	ldi		r16,1
	add		r28,r16
	adc		r29,r0
	rjmp	str_1
str_finish:
	pop		r19
	pop		r18
	ret
; r18 page 0~7
; r19 column
; r17 value of hex
oled_hex:
	movw	r8,r18
	mov		temp2,r17
	swap	r17
	andi	r17,0x0f
	ldi		r30,low(hex*2)
	ldi		r31,high(hex*2)
	add		r30,r17
	adc		r31,r0
	lpm		r17,Z
	rcall	oled_char
	mov		r17,temp2
	andi	r17,0x0f
	ldi		r30,low(hex*2)
	ldi		r31,high(hex*2)
	add		r30,r17
	adc		r31,r0
	lpm		r17,Z
	movw	r18,r8
	ldi		r16,8
	add		r19,r16
	rcall	oled_char
	ret
.if 1==2
show_image1:
	ldi		r20,0
si_1:
	mov		r19,r20
	rcall	oled_page
	ldi		r19,0
	rcall	oled_column
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	ldi		r18,0x40
	rcall	twi_send
	ldi		r19,128
si_2:
	ldi		r18,0x80
	rcall	twi_send
	dec		r19
	brne	si_2
	rcall	twi_stop
	inc		r20
	cpi		r20,8
	brne	si_1
	ret
.endif


show_image:
	ldi		r16,0
	; image buffer pointer
	clr		r8
show_i_1:
	mov		temp1,r16
	mov		r19,r16
	rcall	oled_page
	ldi		r19,0
	rcall	oled_column
	ldi		r18,TWI_ADDR_OLED_W
	rcall	twi_start
	; D/C# high for data access
	ldi		r18,0x40
	rcall	twi_send
	ldi		r17,0
show_i_2:
	mov		r16,temp1
	mov		temp2,r17
	rcall	retieve_data
	ldi		r30,low(mem_image_data)
	ldi		r31,high(mem_image_data)
	ldi		r19,16
show_i_3:
	ld		r18,Z+
	rcall	twi_send
	dec		r19
	brne	show_i_3
	mov		r17,temp2
	inc		r17
	cpi		r17,8
	brne	show_i_2
	rcall	twi_stop
	mov		r16,temp1
	inc		r16
	cpi		r16,8
	brne	show_i_1
	ret
; OLED lm096 functions end ==============================================================

; r16: page index
; r17: row index
retieve_data:
	ldi		r30,low(image_index*2)
	ldi		r31,high(image_index*2)
	add		r30,r16
	adc		r31,r0
	lpm		r18,Z
rd_1:
	tst		r17
	breq	rd_2
	lsr		r18
	dec		r17
	rjmp	rd_1
rd_2:
	ldi		r28,low(mem_image_data)
	ldi		r29,high(mem_image_data)

	sbrs	r18,0
	rjmp	rd_put_zero
	; puts data
	ldi		r30,low(image*2)
	ldi		r31,high(image*2)
	; r8(0~63)
	mov		r18,r8
	clr		r19
	lsl		r18		;2x
	lsl		r18		;4x
	lsl		r18		;8x
	rol		r19
	lsl		r18		;16x
	rol		r19
;	lsl		r18		;32x
;	rol		r19
;	lsl		r18		;64x
;	rol		r19
;	lsl		r18		;128x
;	rol		r19
	add		r30,r18
	adc		r31,r19
;	mov		r18,temp2
;	lsl		r18		;2x
;	lsl		r18		;4x
;	lsl		r18		;8x
;	lsl		r18		;16x
;	add		r30,temp2
;	adc		r31,r0

	ldi		r18,16
rd_3:
	lpm		r19,Z
	st		Y+,r19
	adiw	r30,1
	dec		r18
	brne	rd_3
	
	inc		r8
	rjmp	rd_exit
rd_put_zero:
	ldi		r18,16
rd_4:
	st		Y+,r0
	dec		r18
	brne	rd_4

rd_exit:
	ret
; twi module functions ==================================================================
twi_init:
	ldi		r16,50
	out		TWBR,r16
	cbi		DDRC,4
	cbi		DDRC,5
	sbi		PORTC,4
	sbi		PORTC,5
	ret
; r18(in)	twi address	, bit1 to bit 7, bit0: 0 indicate write, 1 indicate read
; r16(out)	return error code if start failure
; r16	return 0 if success
twi_start:
	; TWCR[TWINT|TWEA|TWSTA|TWSTO|TWWC|TWEN|-|TWIE]
	;        RW    RW   RW    RW   R    RW  R  RW
	; start
	ldi		r16,(1<<TWINT)|(1<<TWSTA)|(1<<TWEN)
	out		TWCR,r16
twi_start_1:
	in		r16,TWCR
	sbrs	r16,TWINT
	rjmp	twi_start_1
	in		r16,TWSR
	andi	r16,0xf8
	cpi		r16,START_SENT
	breq	twi_start_success
	cpi		r16,REPEAT_START_SENT
	brne	twi_error
twi_start_success:
	; twi address(SLA+R/W)
	out		TWDR,r18
	ldi		r16,(1<<TWINT)|(1<<TWEN)
	out		TWCR,r16
twi_start_2:
	IN		R16,TWCR
	sbrs	R16,TWINT
	rjmp	twi_start_2

	in		r16,TWSR
	andi	r16,0xf8
	sbrs	r18,0
	rjmp	sla_w_ack
	cpi		r16,SLAR_ACK
	brne	twi_error
	rjmp	start_finish
sla_w_ack:
	cpi		r16,SLAW_ACK
	brne	twi_error

start_finish:
	clt
	ret
twi_error:
	push	r16
	rcall	twi_stop
	pop		r16
	set
	ret
; r18(out)	receive data from slave device
twi_recv:
	ldi		r16,(1<<TWINT)|(1<<TWEN)
	out		TWCR,r16
twi_recv_1:
	in		r16,TWCR
	sbrs	r16,TWINT
	rjmp	twi_recv_1
	in		r18,TWDR
	ret
; must follow function twi_start
; r18	data
twi_send:
	out		TWDR,r18
	ldi		r16,(1<<TWINT)|(1<<TWEN)
	out		TWCR,r16
twi_send_1:
	in		r16,TWCR
	sbrs	r16,TWINT
	rjmp	twi_send_1
	in		r16,TWSR
	andi	r16,0xf8
	cpi		r16,DATA_ACK
	brne	twi_error
	clt
	ret
twi_stop:
	ldi		r16,(1<<TWINT)|(1<<TWEN)|(1<<TWSTO)
	out		TWCR,r16
	rcall	short_delay
	ret
; twi module functions end ===============================================================
; AKM module functions     ===============================================================
; r18 register address
; r19 value
akm_write:
	movw	r8,r18
	ldi		r18,TWI_ADDR_4114_W
	rcall	twi_start
	mov		r18,r8
	rcall	twi_send
	mov		r18,r9
	rcall	twi_send
	rcall	twi_stop
	ret
; r18 register address
; r19 return value
akm_read:
	mov		r8,r18
	ldi		r18,TWI_ADDR_4114_W
	rcall	twi_start
	mov		r18,r8
	rcall	twi_send
	ldi		r18,TWI_ADDR_4114_R
	rcall	twi_start
	brtc	test_led
	rjmp	akm_error
test_led:

	rcall	twi_recv
	rcall	twi_stop
	mov		r19,r18
	mov		r18,r8
	ret
ak_channel_change_delay:
	ldi		r24,0xff
	ldi		r25,0xff
ak_ch_ch_delay1:
	sbiw	r24,1	; 2
	brne	ak_ch_ch_delay1
	ret
akm_error:
	; reset twi module
	ldi		r17,0
	out		TWCR,r17
;	mov		r17,r16
;	ldi		r18,6
;	ldi		r19,0
;	rcall	oled_hex
	;rcall	twi_stop
	ret
; AKM module functions end ===============================================================
short_delay:
	push	r16					;1
	ldi		r16,16				;1
short_delay_1:
	dec		r16					;1
	brne	short_delay_1		;2 
	pop		r16					;1
	ret
long_delay:
	push	r16					;1
	ldi		r16,32				;1
long_delay_1:
	dec		r16					;1
	brne	long_delay_1		;2 
	pop		r16					;1
	ret

ovf0_int:
	in		r_sreg,SREG
	inc		tcnt0h
	brne	f0_exit
	inc		tcnt0x
f0_exit:
	out		SREG,r_sreg
	reti
init_timer0:
	ldi		r16,5
	out		TCCR0,r16
	ldi		r16,1
	out		TIMSK,r16
	ret

delay_1sec:
	ldi		r18,25
delay_1sec_2:
	ldi		r24,0xff
	ldi		r25,0xff
delay_1sec_1:
	sbiw	r24,1	; 2
	brne	delay_1sec_1		; 2
	dec		r18
	brne	delay_1sec_2
	ret
hex:
	.db "0123456789ABCDEF"
logo:
	.db "Arti 5h DAC",0
str_coax:
	.db "COAX     ",0
str_optical:
	.db "OPTI     ",0
str_usb:
	.db "USB      ",0
no_signal:
	.db "NO SIGNAL",0
fs_index:
	.db low(fs_0*2),high(fs_0*2),low(fs_1*2),high(fs_1*2),low(fs_2*2),high(fs_2*2),low(fs_3*2),high(fs_3*2)
	.db low(fs_4*2),high(fs_4*2),low(fs_5*2),high(fs_5*2),low(fs_6*2),high(fs_6*2)
	.db low(fs_7*2),high(fs_7*2),low(fs_8*2),high(fs_8*2),low(fs_9*2),high(fs_9*2)
	.db low(fs_10*2),high(fs_10*2),low(fs_11*2),high(fs_11*2),low(fs_12*2),high(fs_12*2)
	.db low(fs_1*2),high(fs_1*2),low(fs_14*2),high(fs_14*2)
 



fs_0:
	.db "44.1kHz",0		; 0
fs_1:
	.db "N/A",0			; 1
fs_2:
	.db "48kHz",0		; 2
fs_3:
	.db "32kHz",0		; 3
fs_4:
	.db "22.05kHz",0,0	;
fs_5:
	.db "11.025kHz",0
fs_6:
	.db "24kHz",0
fs_7:
	.db "16kHz",0
fs_8:
	.db "88.2kHz",0		; 8
fs_9:
	.db "8kHz",0,0		; 
fs_10:
	.db "96kHz",0		; 10
fs_11:
	.db "64kHz",0
fs_12:
	.db "176.4kHz",0,0	; 12
fs_14:
	.db "192kHz",0,0	; 14
ascii_matrix:
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x38,0xfc,0xfc,0x38,0x00,0x00,0x00,0x00,0x00,0x0d,0x0d,0x00,0x00,0x00
	.db	0x00,0x0e,0x1e,0x00,0x00,0x1e,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x20,0xf8,0xf8,0x20,0xf8,0xf8,0x20,0x00,0x02,0x0f,0x0f,0x02,0x0f,0x0f,0x02,0x00
	.db	0x38,0x7c,0x44,0x47,0x47,0xcc,0x98,0x00,0x06,0x0c,0x08,0x38,0x38,0x0f,0x07,0x00
	.db	0x30,0x30,0x00,0x80,0xc0,0x60,0x30,0x00,0x0c,0x06,0x03,0x01,0x00,0x0c,0x0c,0x00
	.db	0x80,0xd8,0x7c,0xe4,0xbc,0xd8,0x40,0x00,0x07,0x0f,0x08,0x08,0x07,0x0f,0x08,0x00
	.db	0x00,0x10,0x1e,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0xf0,0xf8,0x0c,0x04,0x00,0x00,0x00,0x00,0x03,0x07,0x0c,0x08,0x00,0x00
	.db	0x00,0x00,0x04,0x0c,0xf8,0xf0,0x00,0x00,0x00,0x00,0x08,0x0c,0x07,0x03,0x00,0x00
	.db	0x80,0xa0,0xe0,0xc0,0xc0,0xe0,0xa0,0x80,0x00,0x02,0x03,0x01,0x01,0x03,0x02,0x00
	.db	0x00,0x80,0x80,0xe0,0xe0,0x80,0x80,0x00,0x00,0x00,0x00,0x03,0x03,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x1e,0x0e,0x00,0x00,0x00
	.db	0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x0c,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x80,0xc0,0x60,0x30,0x00,0x0c,0x06,0x03,0x01,0x00,0x00,0x00,0x00
	.db	0xf0,0xf8,0x0c,0xc4,0x0c,0xf8,0xf0,0x00,0x03,0x07,0x0c,0x08,0x0c,0x07,0x03,0x00
	.db	0x00,0x10,0x18,0xfc,0xfc,0x00,0x00,0x00,0x00,0x08,0x08,0x0f,0x0f,0x08,0x08,0x00
	.db	0x08,0x0c,0x84,0xc4,0x64,0x3c,0x18,0x00,0x0e,0x0f,0x09,0x08,0x08,0x0c,0x0c,0x00
	.db	0x08,0x0c,0x44,0x44,0x44,0xfc,0xb8,0x00,0x04,0x0c,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0xc0,0xe0,0xb0,0x98,0xfc,0xfc,0x80,0x00,0x00,0x00,0x00,0x08,0x0f,0x0f,0x08,0x00
	.db	0x7c,0x7c,0x44,0x44,0x44,0xc4,0x84,0x00,0x04,0x0c,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0xf0,0xf8,0x4c,0x44,0x44,0xc0,0x80,0x00,0x07,0x0f,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0x0c,0x0c,0x04,0x84,0xc4,0x7c,0x3c,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00,0x00
	.db	0xb8,0xfc,0x44,0x44,0x44,0xfc,0xb8,0x00,0x07,0x0f,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0x38,0x7c,0x44,0x44,0x44,0xfc,0xf8,0x00,0x00,0x08,0x08,0x08,0x0c,0x07,0x03,0x00
	.db	0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,0x08,0x0e,0x06,0x00,0x00,0x00
	.db	0x00,0x80,0xc0,0x60,0x30,0x18,0x08,0x00,0x00,0x00,0x01,0x03,0x06,0x0c,0x08,0x00
	.db	0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00
	.db	0x00,0x08,0x18,0x30,0x60,0xc0,0x80,0x00,0x00,0x08,0x0c,0x06,0x03,0x01,0x00,0x00
	.db	0x18,0x1c,0x04,0xc4,0xe4,0x3c,0x18,0x00,0x00,0x00,0x00,0x0d,0x0d,0x00,0x00,0x00
	.db	0xf0,0xf8,0x08,0xc8,0xc8,0xf8,0xf0,0x00,0x07,0x0f,0x08,0x0b,0x0b,0x0b,0x01,0x00
	.db	0xe0,0xf0,0x98,0x8c,0x98,0xf0,0xe0,0x00,0x0f,0x0f,0x00,0x00,0x00,0x0f,0x0f,0x00
	.db	0x04,0xfc,0xfc,0x44,0x44,0xfc,0xb8,0x00,0x08,0x0f,0x0f,0x08,0x08,0x0f,0x07,0x00
	.db	0xf0,0xf8,0x0c,0x04,0x04,0x0c,0x18,0x00,0x03,0x07,0x0c,0x08,0x08,0x0c,0x06,0x00
	.db	0x04,0xfc,0xfc,0x04,0x0c,0xf8,0xf0,0x00,0x08,0x0f,0x0f,0x08,0x0c,0x07,0x03,0x00
	.db	0x04,0xfc,0xfc,0x44,0xe4,0x0c,0x1c,0x00,0x08,0x0f,0x0f,0x08,0x08,0x0c,0x0e,0x00
	.db	0x04,0xfc,0xfc,0x44,0xe4,0x0c,0x1c,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00,0x00,0x00
	.db	0xf0,0xf8,0x0c,0x84,0x84,0x8c,0x98,0x00,0x03,0x07,0x0c,0x08,0x08,0x07,0x0f,0x00
	.db	0xfc,0xfc,0x40,0x40,0x40,0xfc,0xfc,0x00,0x0f,0x0f,0x00,0x00,0x00,0x0f,0x0f,0x00
	.db	0x00,0x00,0x04,0xfc,0xfc,0x04,0x00,0x00,0x00,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00
	.db	0x00,0x00,0x00,0x04,0xfc,0xfc,0x04,0x00,0x07,0x0f,0x08,0x08,0x0f,0x07,0x00,0x00
	.db	0x04,0xfc,0xfc,0xc0,0xe0,0x3c,0x1c,0x00,0x08,0x0f,0x0f,0x00,0x01,0x0f,0x0e,0x00
	.db	0x04,0xfc,0xfc,0x04,0x00,0x00,0x00,0x00,0x08,0x0f,0x0f,0x08,0x08,0x0c,0x0e,0x00
	.db	0xfc,0xfc,0x38,0x70,0x38,0xfc,0xfc,0x00,0x0f,0x0f,0x00,0x00,0x00,0x0f,0x0f,0x00
	.db	0xfc,0xfc,0x38,0x70,0xe0,0xfc,0xfc,0x00,0x0f,0x0f,0x00,0x00,0x00,0x0f,0x0f,0x00
	.db	0xf8,0xfc,0x04,0x04,0x04,0xfc,0xf8,0x00,0x07,0x0f,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0x04,0xfc,0xfc,0x44,0x44,0x7c,0x38,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00,0x00,0x00
	.db	0xf8,0xfc,0x04,0x04,0x04,0xfc,0xf8,0x00,0x07,0x0f,0x08,0x0e,0x3c,0x3f,0x27,0x00
	.db	0x04,0xfc,0xfc,0x44,0xc4,0xfc,0x38,0x00,0x08,0x0f,0x0f,0x00,0x00,0x0f,0x0f,0x00
	.db	0x18,0x3c,0x64,0x44,0xc4,0x9c,0x18,0x00,0x06,0x0e,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0x00,0x1c,0x0c,0xfc,0xfc,0x0c,0x1c,0x00,0x00,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00
	.db	0xfc,0xfc,0x00,0x00,0x00,0xfc,0xfc,0x00,0x07,0x0f,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0xfc,0xfc,0x00,0x00,0x00,0xfc,0xfc,0x00,0x01,0x03,0x06,0x0c,0x06,0x03,0x01,0x00
	.db	0xfc,0xfc,0x00,0xc0,0x00,0xfc,0xfc,0x00,0x07,0x0f,0x0e,0x03,0x0e,0x0f,0x07,0x00
	.db	0x0c,0x3c,0xf0,0xe0,0xf0,0x3c,0x0c,0x00,0x0c,0x0f,0x03,0x01,0x03,0x0f,0x0c,0x00
	.db	0x00,0x3c,0x7c,0xc0,0xc0,0x7c,0x3c,0x00,0x00,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00
	.db	0x1c,0x0c,0x84,0xc4,0x64,0x3c,0x1c,0x00,0x0e,0x0f,0x09,0x08,0x08,0x0c,0x0e,0x00
	.db	0x00,0x00,0xfc,0xfc,0x04,0x04,0x00,0x00,0x00,0x00,0x0f,0x0f,0x08,0x08,0x00,0x00
	.db	0x38,0x70,0xe0,0xc0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x07,0x0e,0x00
	.db	0x00,0x00,0x04,0x04,0xfc,0xfc,0x00,0x00,0x00,0x00,0x08,0x08,0x0f,0x0f,0x00,0x00
	.db	0x08,0x0c,0x06,0x03,0x06,0x0c,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
	.db	0x00,0x00,0x03,0x07,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0xa0,0xa0,0xa0,0xe0,0xc0,0x00,0x00,0x07,0x0f,0x08,0x08,0x07,0x0f,0x08,0x00
	.db	0x04,0xfc,0xfc,0x20,0x60,0xc0,0x80,0x00,0x00,0x0f,0x0f,0x08,0x08,0x0f,0x07,0x00
	.db	0xc0,0xe0,0x20,0x20,0x20,0x60,0x40,0x00,0x07,0x0f,0x08,0x08,0x08,0x0c,0x04,0x00
	.db	0x80,0xc0,0x60,0x24,0xfc,0xfc,0x00,0x00,0x07,0x0f,0x08,0x08,0x07,0x0f,0x08,0x00
	.db	0xc0,0xe0,0xa0,0xa0,0xa0,0xe0,0xc0,0x00,0x07,0x0f,0x08,0x08,0x08,0x0c,0x04,0x00
	.db	0x40,0xf8,0xfc,0x44,0x0c,0x18,0x00,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00,0x00,0x00
	.db	0xc0,0xe0,0x20,0x20,0xc0,0xe0,0x20,0x00,0x27,0x6f,0x48,0x48,0x7f,0x3f,0x00,0x00
	.db	0x04,0xfc,0xfc,0x40,0x20,0xe0,0xc0,0x00,0x08,0x0f,0x0f,0x00,0x00,0x0f,0x0f,0x00
	.db	0x00,0x00,0x20,0xec,0xec,0x00,0x00,0x00,0x00,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x20,0xec,0xec,0x00,0x00,0x30,0x70,0x40,0x40,0x7f,0x3f,0x00
	.db	0x04,0xfc,0xfc,0x80,0xc0,0x60,0x20,0x00,0x08,0x0f,0x0f,0x01,0x03,0x0e,0x0c,0x00
	.db	0x00,0x00,0x04,0xfc,0xfc,0x00,0x00,0x00,0x00,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00
	.db	0xe0,0xe0,0x60,0xc0,0x60,0xe0,0xc0,0x00,0x0f,0x0f,0x00,0x07,0x00,0x0f,0x0f,0x00
	.db	0x20,0xe0,0xc0,0x20,0x20,0xe0,0xc0,0x00,0x00,0x0f,0x0f,0x00,0x00,0x0f,0x0f,0x00
	.db	0xc0,0xe0,0x20,0x20,0x20,0xe0,0xc0,0x00,0x07,0x0f,0x08,0x08,0x08,0x0f,0x07,0x00
	.db	0x20,0xe0,0xc0,0x20,0x20,0xe0,0xc0,0x00,0x40,0x7f,0x7f,0x48,0x08,0x0f,0x07,0x00
	.db	0xc0,0xe0,0x20,0x20,0xc0,0xe0,0x20,0x00,0x07,0x0f,0x08,0x48,0x7f,0x7f,0x40,0x00
	.db	0x20,0xe0,0xc0,0x60,0x20,0xe0,0xc0,0x00,0x08,0x0f,0x0f,0x08,0x00,0x00,0x00,0x00
	.db	0x40,0xe0,0xa0,0x20,0x20,0x60,0x40,0x00,0x04,0x0c,0x09,0x09,0x0b,0x0e,0x04,0x00
	.db	0x20,0x20,0xf8,0xfc,0x20,0x20,0x00,0x00,0x00,0x00,0x07,0x0f,0x08,0x0c,0x04,0x00
	.db	0xe0,0xe0,0x00,0x00,0xe0,0xe0,0x00,0x00,0x07,0x0f,0x08,0x08,0x07,0x0f,0x08,0x00
	.db	0x00,0xe0,0xe0,0x00,0x00,0xe0,0xe0,0x00,0x00,0x03,0x07,0x0c,0x0c,0x07,0x03,0x00
	.db	0xe0,0xe0,0x00,0x80,0x00,0xe0,0xe0,0x00,0x07,0x0f,0x0c,0x07,0x0c,0x0f,0x07,0x00
	.db	0x20,0x60,0xc0,0x80,0xc0,0x60,0x20,0x00,0x08,0x0c,0x07,0x03,0x07,0x0c,0x08,0x00
	.db	0xe0,0xe0,0x00,0x00,0x00,0xe0,0xe0,0x00,0x47,0x4f,0x48,0x48,0x68,0x3f,0x1f,0x00
	.db	0x60,0x60,0x20,0xa0,0xe0,0x60,0x20,0x00,0x0c,0x0e,0x0b,0x09,0x08,0x0c,0x0c,0x00
	.db	0x00,0x40,0x40,0xf8,0xbc,0x04,0x04,0x00,0x00,0x00,0x00,0x07,0x0f,0x08,0x08,0x00
	.db	0x00,0x00,0x00,0xbc,0xbc,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x00
	.db	0x00,0x04,0x04,0xbc,0xf8,0x40,0x40,0x00,0x00,0x08,0x08,0x0f,0x07,0x00,0x00,0x00
	.db	0x08,0x0c,0x04,0x0c,0x08,0x0c,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x80,0xc0,0x60,0x30,0x60,0xc0,0x80,0x00,0x07,0x07,0x04,0x04,0x04,0x07,0x07,0x00


image:
; page 2
	.db	0x00,0x00,0x00,0x00,0x00,0x80,0xc0,0xc0,0xc0,0xc0,0xe0,0xe0,0xe0,0xe0,0xe0,0xe0
	.db	0xf0,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0xf0,0xf0,0xf0,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xc0,0xc0,0xc0
	.db	0xc0,0xc0,0xc0,0xc0,0xe0,0xe0,0xf0,0x20,0x00,0x00,0x00,0x00,0x00,0x80,0xe0,0xf0
	.db	0xf8,0x3c,0x1c,0x1e,0x1e,0x1e,0x1e,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
; page 3
	.db	0x00,0x00,0x38,0x7e,0x7f,0x37,0x01,0x81,0xe0,0xf0,0x7c,0x1e,0xef,0xff,0xff,0xff
	.db	0x1f,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0xc0,0xe0,0xe0,0xf0,0xf0,0xf0,0xc0,0xe0
	.db	0xf0,0xf0,0x78,0x78,0xf0,0xe0,0xe0,0xe0,0xfe,0xfe,0xff,0xef,0xe0,0xe0,0xe0,0x00
	.db	0x00,0x80,0xc0,0xe0,0xe0,0xf0,0xf0,0xf0,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xff,0xff,0xf1,0xf1
	.db	0xe1,0xe1,0x81,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0xc0,0xfc,0xff,0xff,0xbf
	.db	0x81,0xc0,0xe0,0xe0,0xf0,0xf0,0xf0,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
; page 4
	.db	0x00,0x00,0xc0,0xe0,0xf8,0x7c,0x7f,0x77,0x73,0x70,0x70,0xf0,0xff,0xff,0xff,0x1f
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0xe0,0xff,0xff,0xff,0x1f,0x07,0x03,0x01
	.db	0x00,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x80,0x00,0x00
	.db	0x00,0x03,0x81,0xf0,0xff,0xff,0x7f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x83
	.db	0xff,0xff,0xff,0x1e,0x00,0x00,0x00,0x00,0x00,0x80,0xf8,0xff,0xff,0x3f,0x0f,0x03
	.db	0x01,0x81,0xf0,0xff,0xff,0x7f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
; page 5
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xc0,0xc0,0x80,0xc0,0xc0,0xe0,0x70,0x3c
	.db	0x1e,0x0f,0x07,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x3f,0x3f,0x3f,0x3f,0x30
	.db	0x30,0x30,0x30,0x00,0x00,0x00,0x00,0x3e,0x3f,0x3f,0x1f,0x01,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x1f,0x3f,0x3f,0x3f,0x1c,0x1c,0x0e,0x0e,0x07,0x03,0x01,0x00
	.db	0x00,0x00,0x3f,0x3f,0x3f,0x1f,0x1c,0x0e,0x07,0x02,0x00,0x00,0x00,0x00,0x00,0x00
	.db	0x00,0x00,0x00,0x00,0x08,0x1c,0x3c,0x3c,0x38,0x38,0x38,0x38,0x18,0x1c,0x0e,0x07
	.db	0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3f,0x3f,0x3f,0x07,0x00,0x00,0x00
	.db	0x00,0x1f,0x3f,0x3f,0x1f,0x1c,0x0e,0x0e,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00
; page 6
	.db	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x03,0x03,0x03,0x01,0x00,0x00,0x00
image_index:
	.db	0x00,0x00,0xf6,0xfe,0xfe,0xff,0x01,0x00

.exit